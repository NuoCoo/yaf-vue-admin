<?php Yaf_Loader::import(VIEW_PATH.'/layout/main.phtml'); ?>
<el-button type="primary" @click="dialog = true">主要按钮</el-button>
<el-drawer
        title="我嵌套了 Form !"
        :before-close="handleClose"
        :visible.sync="dialog"
        direction="ltr"
        custom-class="demo-drawer"
        ref="drawer"
>
    <div class="demo-drawer__content">
        <el-form :model="form">
            <el-form-item label="活动名称" :label-width="formLabelWidth">
                <el-input v-model="form.name" autocomplete="off"></el-input>
            </el-form-item>
            <el-form-item label="活动区域" :label-width="formLabelWidth">
                <el-select v-model="form.region" placeholder="请选择活动区域">
                    <el-option label="区域一" value="shanghai"></el-option>
                    <el-option label="区域二" value="beijing"></el-option>
                </el-select>
            </el-form-item>
        </el-form>
        <div class="demo-drawer__footer">
            <el-button @click="cancelForm">取 消</el-button>
            <el-button type="primary" @click="$refs.drawer.closeDrawer()" :loading="loading">{{ loading ? '提交中 ...' : '确 定' }}</el-button>
        </div>
    </div>
</el-drawer>
<?php Yaf_Loader::import(VIEW_PATH.'/layout/footer.phtml'); ?>
<script>
    var $NuoCoo = new Vue({
        el: '#app',
        mixins: [$layout],
        data: {
            dialog: false,
            loading: false,
            activeIndex: '1',
            road:{'2':1,'5':1,'8':1,'11':1,'14':1,'17':1,'20':1,'23':1,'26':1,'29':1,'32':1,'34':1},
            parkingData:[],
            form: {
                name: '',
                region: '',
                date1: '',
                date2: '',
                delivery: false,
                type: [],
                resource: '',
                desc: ''
            },
            formLabelWidth: '80px',
            timer: null,
        },
        methods: {
            cancelForm() {
                this.loading = false;
                this.dialog = false;
                clearTimeout(this.timer);
            },
            parkingClickEvent:function(e, x, y){
                var that = this;

                that.$set(that.parkingData[x+'c'+y+'a'], 'status', 1);
                console.log(that.parkingData[x + 'c' + y + 'a']);
                // console.log(that.parkingData);
                // that.$set(that.parkingData, [x+'c'+y+'a'], {i:x,j:y,status:true});
                // console.log(that.parkingData[]);
            },
            parkingMouseoverEvent:function(e, x, y){
                console.log(e, x, y);
            },
            parkingMouseoutEvent:function(e, x, y){
                console.log(e, x, y);
            },

            handleSelect(key, keyPath) {
                $(".container-content").load('/index/forms');
                console.log(key, keyPath);
            },
            handleOpen(key, keyPath) {
                $(".container-content").load('/forms');
                console.log(key,keyPath);
                console.log(key, keyPath);
            },
            handleClose(key, keyPath) {
                console.log(key, keyPath);
            }
        },
        mounted: function () {
            var that = this;

        },
        beforeCreate:function(){
            console.log('beforecreate');
        },

        created:function(){


        }
    })
</script>
